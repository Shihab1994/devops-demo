trigger:
  branches:
    include:
      - main
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: JavaToolInstaller@0
            inputs:
              version: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              sonarQubeRunAnalysis: true
              sqMavenPluginVersionChoice: 'latest'
            env:
              SONAR_TOKEN: $(SONAR_TOKEN)
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'target/devops-demo-0.0.1-SNAPSHOT.jar'
              artifactName: 'app-artifact'
              publishLocation: 'Container'

  - stage: Deliver
    dependsOn: Build
    jobs:
      - job: DeliverJob
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'app-artifact'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'package'
              options: '-DskipTests'

  - stage: DeployToDev
    dependsOn: Deliver
    jobs:
      - deployment: DeployDev
        environment: 'Dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Deploying to Dev environment on port 8080"
                    java -jar $(System.ArtifactsDirectory)/app-artifact/devops-demo-0.0.1-SNAPSHOT.jar --server.port=8080 &
                    sleep 10
                    curl http://localhost:8080/hello
                  displayName: 'Deploy to Dev'

  - stage: DeployToQAT
    dependsOn: DeployToDev
    jobs:
      - deployment: DeployQAT
        environment: 'QAT'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Mock deploying to QAT environment"
                  displayName: 'Deploy to QAT'

  - stage: DeployToStaging
    dependsOn: DeployToQAT
    jobs:
      - deployment: DeployStaging
        environment: 'Staging'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Mock deploying to Staging environment"
                  displayName: 'Deploy to Staging'

  - stage: DeployToProduction
    dependsOn: DeployToStaging
    jobs:
      - deployment: DeployProduction
        environment: 'Production'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Mock deploying to Production environment"
                  displayName: 'Deploy to Production'